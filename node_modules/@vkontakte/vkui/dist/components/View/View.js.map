{"version":3,"sources":["../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\n\nconst SWIPE_BACK_AREA = 70;\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const scrolls = React.useRef(scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackPrevented, setSwipeBackPrevented] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false ||\n    !splitCol?.animate ||\n    platform === Platform.VKCOM;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const onMoveX = (event: TouchEvent): void => {\n    if (\n      platform !== Platform.IOS ||\n      swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      disableAnimation\n    ) {\n      return;\n    }\n\n    if (!configProvider?.isWebView) {\n      if (\n        (event.startX <= SWIPE_BACK_AREA || event.startX >= window!.innerWidth - SWIPE_BACK_AREA) &&\n        !browserSwipe\n      ) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || (animated && event.startX <= SWIPE_BACK_AREA)) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      let swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        swipeBackShift = window!.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (event: TouchEvent): void => {\n      if (swipingBack) {\n        const speed = (swipeBackShift / event.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (speed > 250 || swipeBackStartX + swipeBackShift > window!.innerWidth / 2) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n      if (swipeBackPrevented) {\n        setSwipeBackPrevented(false);\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      swipeBackPrevented,\n      window,\n    ],\n  );\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n    let prevPanelShadow = (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      className={classNames(\n        styles['View'],\n        platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n        !disableAnimation && animated && styles['View--animated'],\n        !disableAnimation && swipingBack && styles['View--swiping-back'],\n        disableAnimation && styles['View--no-motion'],\n        className,\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div className={styles['View__panels']}>\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              className={classNames(\n                styles['View__panel'],\n                panelId === activePanel && styles['View__panel--active'],\n                panelId === prevPanel && styles['View__panel--prev'],\n                panelId === nextPanel && styles['View__panel--next'],\n                panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                swipeBackResult === SwipeBackResults.success &&\n                  styles['View__panel--swipe-back-success'],\n                swipeBackResult === SwipeBackResults.fail &&\n                  styles['View__panel--swipe-back-failed'],\n              )}\n              onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n              ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                className={styles['View__panel-in']}\n                style={{\n                  marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                }}\n              >\n                <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                  <NavTransitionProvider\n                    entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </NavTransitionDirectionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Touch>\n  );\n};\n"],"names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","Platform","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavTransitionProvider","NavTransitionDirectionProvider","useSplitCol","Touch","swipeBackExcluded","SWIPE_BACK_AREA","SwipeBackResults","fail","success","scrollsCache","warn","View","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","configProvider","splitCol","scrolls","useRef","id","afterTransition","useEffect","current","panelNodes","window","document","scroll","platform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipingBack","setSwipingBack","swipeBackPrevented","setSwipeBackPrevented","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","Boolean","waitTransitionFinish","animationFinishTimeout","IOS","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","onMoveX","event","isWebView","startX","innerWidth","length","payload","getScroll","y","slice","shiftX","onEnd","speed","duration","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","firstLayerId","map","find","supported","set","Component","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","entering"],"mappings":"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"}