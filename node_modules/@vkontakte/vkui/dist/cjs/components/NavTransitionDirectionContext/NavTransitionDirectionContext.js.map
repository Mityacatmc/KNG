{"version":3,"sources":["../../../../src/components/NavTransitionDirectionContext/NavTransitionDirectionContext.tsx"],"sourcesContent":["import React from 'react';\n\ntype DirectionContextType = boolean | undefined;\n\nconst TransitionDirectionContext = React.createContext<DirectionContextType>(undefined);\n\nexport const NavTransitionDirectionProvider = ({\n  children,\n  isBack: isBackProp,\n}: React.PropsWithChildren<{ isBack: DirectionContextType }>) => {\n  const parentIsBack = React.useContext(TransitionDirectionContext);\n  // if local isBack is undefined then transition happend on the parent side (probably Root)\n  const isBack = isBackProp !== undefined ? isBackProp : parentIsBack;\n\n  // 'direction' should always represent the direction state of the panel on mount\n  // save the on mount value of the panel to the state\n  // to make sure we don't trigger new re-render for the panel\n  // due to change in the prop passed to provider\n  const [isBackOnMount] = React.useState<DirectionContextType>(isBack);\n\n  return (\n    <TransitionDirectionContext.Provider value={isBackOnMount}>\n      {children}\n    </TransitionDirectionContext.Provider>\n  );\n};\n\nexport type TransitionDirection = undefined | 'forwards' | 'backwards';\n\nexport const useNavDirection = (): TransitionDirection => {\n  const isBack = React.useContext(TransitionDirectionContext);\n  const transitionDirection = isBack === undefined ? undefined : isBack ? 'backwards' : 'forwards';\n\n  return transitionDirection;\n};\n"],"names":["NavTransitionDirectionProvider","useNavDirection","TransitionDirectionContext","React","createContext","undefined","children","isBack","isBackProp","parentIsBack","useContext","useState","isBackOnMount","Provider","value","transitionDirection"],"mappings":";;;;;;;;;;;IAMaA,8BAA8B;eAA9BA;;IAuBAC,eAAe;eAAfA;;;;;8DA7BK;AAIlB,IAAMC,2CAA6BC,cAAK,CAACC,aAAa,CAAuBC;AAEtE,IAAML,iCAAiC;QAC5CM,iBAAAA,UACAC,AAAQC,mBAARD;IAEA,IAAME,eAAeN,cAAK,CAACO,UAAU,CAACR;IACtC,0FAA0F;IAC1F,IAAMK,SAASC,eAAeH,YAAYG,aAAaC;IAEvD,gFAAgF;IAChF,oDAAoD;IACpD,4DAA4D;IAC5D,+CAA+C;IAC/C,IAAwBN,qCAAAA,cAAK,CAACQ,QAAQ,CAAuBJ,aAAtDK,gBAAiBT;IAExB,qBACE,6BAACD,2BAA2BW,QAAQ;QAACC,OAAOF;OACzCN;AAGP;AAIO,IAAML,kBAAkB;IAC7B,IAAMM,SAASJ,cAAK,CAACO,UAAU,CAACR;IAChC,IAAMa,sBAAsBR,WAAWF,YAAYA,YAAYE,SAAS,cAAc;IAEtF,OAAOQ;AACT"}