{"version":3,"sources":["../../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\n\nconst SWIPE_BACK_AREA = 70;\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const scrolls = React.useRef(scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackPrevented, setSwipeBackPrevented] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false ||\n    !splitCol?.animate ||\n    platform === Platform.VKCOM;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const onMoveX = (event: TouchEvent): void => {\n    if (\n      platform !== Platform.IOS ||\n      swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      disableAnimation\n    ) {\n      return;\n    }\n\n    if (!configProvider?.isWebView) {\n      if (\n        (event.startX <= SWIPE_BACK_AREA || event.startX >= window!.innerWidth - SWIPE_BACK_AREA) &&\n        !browserSwipe\n      ) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || (animated && event.startX <= SWIPE_BACK_AREA)) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      let swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        swipeBackShift = window!.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (event: TouchEvent): void => {\n      if (swipingBack) {\n        const speed = (swipeBackShift / event.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (speed > 250 || swipeBackStartX + swipeBackShift > window!.innerWidth / 2) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n      if (swipeBackPrevented) {\n        setSwipeBackPrevented(false);\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      swipeBackPrevented,\n      window,\n    ],\n  );\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n    let prevPanelShadow = (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      className={classNames(\n        styles['View'],\n        platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n        !disableAnimation && animated && styles['View--animated'],\n        !disableAnimation && swipingBack && styles['View--swiping-back'],\n        disableAnimation && styles['View--no-motion'],\n        className,\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div className={styles['View__panels']}>\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              className={classNames(\n                styles['View__panel'],\n                panelId === activePanel && styles['View__panel--active'],\n                panelId === prevPanel && styles['View__panel--prev'],\n                panelId === nextPanel && styles['View__panel--next'],\n                panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                swipeBackResult === SwipeBackResults.success &&\n                  styles['View__panel--swipe-back-success'],\n                swipeBackResult === SwipeBackResults.fail &&\n                  styles['View__panel--swipe-back-failed'],\n              )}\n              onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n              ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                className={styles['View__panel-in']}\n                style={{\n                  marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                }}\n              >\n                <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                  <NavTransitionProvider\n                    entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </NavTransitionDirectionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Touch>\n  );\n};\n"],"names":["scrollsCache","View","SWIPE_BACK_AREA","SwipeBackResults","fail","success","warn","warnOnce","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","configProvider","splitCol","scrolls","React","useRef","getNavId","id","afterTransition","noop","useEffect","current","panelNodes","useDOM","window","document","scroll","useScroll","useConfigProvider","useSplitCol","platform","usePlatform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipingBack","setSwipingBack","swipeBackPrevented","setSwipeBackPrevented","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","usePrevious","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","Platform","VKCOM","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","useIsomorphicLayoutEffect","transitionEndHandler","e","animationName","Boolean","waitTransitionFinish","useWaitTransitionFinish","animationFinishTimeout","useTimeout","IOS","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","onMoveX","event","swipeBackExcluded","isWebView","startX","innerWidth","length","payload","blurActiveElement","getScroll","y","slice","shiftX","onEnd","speed","duration","calcPanelSwipeStyles","canUseDOM","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","firstLayerId","map","find","animationEvent","supported","set","Touch","Component","classNames","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","NavTransitionDirectionProvider","NavTransitionProvider","entering"],"mappings":"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"}