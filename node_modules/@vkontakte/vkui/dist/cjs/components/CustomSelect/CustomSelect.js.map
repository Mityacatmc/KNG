{"version":3,"sources":["../../../../src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport type { PlacementWithAuto } from '../../lib/floating';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { debounce, getTitleFromChildren } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { Input } from '../Input/Input';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport { SelectType } from '../Select/Select';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { CustomSelectClearButton, CustomSelectClearButtonProps } from './CustomSelectClearButton';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  [SizeType.COMPACT]: styles['CustomSelect--sizeY-compact'],\n};\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn({ option, ...props }: CustomSelectOptionProps): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(\n  options: CustomSelectOptionInterface[],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = (\n  options: SelectProps['options'],\n  inputValue: string,\n  filterFn: SelectProps['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface SelectProps extends NativeSelectProps, FormFieldProps, TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В **v6** из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[],\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (option: Partial<CustomSelectOptionInterface>) => string,\n      ) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе селект не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props: SelectProps) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon: iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLLabelElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? props.defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const [popperPlacement, setPopperPlacement] = React.useState<PlacementWithAuto | undefined>(\n    undefined,\n  );\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? props.defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement?.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      const fullInput = keyboardInput + key;\n\n      const optionIndex = options.findIndex((option) => {\n        return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex !== undefined && optionIndex > -1) {\n        focusOptionByIndex(optionIndex);\n      }\n\n      setKeyboardInput(fullInput);\n    },\n    [focusOptionByIndex, keyboardInput, options],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose?.();\n  }, [onClose, resetKeyboardInput]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      setNativeSelectValue(item?.value);\n      close();\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('blur');\n    selectElRef.current?.dispatchEvent(event);\n  }, [close, selectElRef]);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focus');\n    selectElRef.current?.dispatchEvent(event);\n  }, [selectElRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? props.defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      props.defaultValue,\n      props.value,\n      searchable,\n      allowClearButton,\n    ],\n  );\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  const onLabelClick = React.useCallback((e: React.MouseEvent<HTMLLabelElement>) => {\n    if (scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(\n    (event) => {\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          areOptionsShown() && focusOption('prev');\n          break;\n        case 'ArrowDown':\n          areOptionsShown() && focusOption('next');\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n          areOptionsShown() && selectFocused();\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, selectFocused],\n  );\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO [>=6]: удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const handleOptionHover = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      focusOptionByIndex(\n        Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n        false,\n      );\n    },\n    [focusOptionByIndex],\n  );\n\n  const renderOption = React.useCallback(\n    (option: CustomSelectOptionInterface, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseOver` вместо `onMouseEnter`.\n            // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n            //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n            //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n            //  2. Если это тач-устройство.\n            //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n            //     но не на тот, на который нажали в первый раз.\n            // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n            onMouseOver: handleOptionHover,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      handleOptionHover,\n      renderOptionProp,\n      selectedOptionIndex,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={() => setNativeSelectValue('')}\n      />\n    );\n  }, [clearButtonShown, ClearButton, iconProp]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  return (\n    <label\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={onLabelClick}\n    >\n      {opened && searchable ? (\n        <Input\n          {...restProps}\n          autoFocus\n          onBlur={onBlur}\n          className={openedClassNames}\n          value={inputValue}\n          onKeyDown={onInputKeyDown}\n          onChange={onInputChange}\n          // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n          // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n          // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n          onClick={props.onClick}\n          before={before}\n          after={afterIcons}\n          mode={getFormFieldModeFromSelectType(selectType)}\n        />\n      ) : (\n        <SelectMimicry\n          {...restProps}\n          aria-hidden\n          onClick={onClick}\n          onKeyDown={handleKeyDownSelect}\n          onKeyUp={handleKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={openedClassNames}\n          before={before}\n          after={afterIcons}\n          selectType={selectType}\n        >\n          {selected?.label}\n        </SelectMimicry>\n      )}\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </label>\n  );\n}\n"],"names":["CustomSelect","sizeYClassNames","none","SizeType","COMPACT","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","warnOnce","checkOptionsValueType","Set","map","item","value","size","defaultRenderOptionFn","props","CustomSelectOption","handleOptionDown","e","preventDefault","findSelectedIndex","withClear","Number","filter","inputValue","filterFn","defaultOptions","selected","React","useState","opened","setOpened","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChange","onInputChangeProp","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","selectType","autoHideScrollbar","autoHideScrollbarDelay","searchable","renderOptionProp","renderOption","optionsProp","emptyText","defaultFilterFn","icon","iconProp","ClearButton","CustomSelectClearButton","allowClearButton","dropdownOffsetDistance","fixDropdownWidth","restProps","process","env","NODE_ENV","useAdaptivity","sizeY","containerRef","useRef","handleRootRef","useExternRef","scrollBoxRef","selectElRef","focusedOptionIndex","setFocusedOptionIndex","undefined","isControlledOutside","setIsControlledOutside","setInputValue","defaultValue","nativeSelectValue","setNativeSelectValue","keyboardInput","setKeyboardInput","popperPlacement","setPopperPlacement","setOptions","selectedOptionIndex","setSelectedOptionIndex","useEffect","useIsomorphicLayoutEffect","some","event","Event","bubbles","current","dispatchEvent","useMemo","openedClassNames","includes","resetKeyboardInput","useCallback","scrollToElement","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","isValidIndex","focusOptionByIndex","scrollTo","areOptionsShown","setScrollBoxRef","ref","onKeyboardInput","key","fullInput","optionIndex","getTitleFromChildren","label","toLowerCase","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","resetFocusedOption","onFocus","onClick","handleKeyUp","debounce","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","onLabelClick","contains","target","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputKeyDown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","handleOptionHover","hovered","Fragment","onMouseDown","onMouseOver","resolvedContent","defaultDropdownContent","Footnote","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","DropdownIcon","afterIcons","classNames","REGULAR","Input","autoFocus","onKeyDown","after","mode","getFormFieldModeFromSelectType","SelectMimicry","aria-hidden","onKeyUp","select","CustomSelectDropdown","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal"],"mappings":"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"}