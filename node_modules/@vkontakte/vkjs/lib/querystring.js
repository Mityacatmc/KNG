"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "querystring", {
    enumerable: true,
    get: function() {
        return querystring;
    }
});
var _object_spread = require("@swc/helpers/_/_object_spread");
function parse(query) {
    if (typeof query !== "string") {
        return {};
    }
    query = query.trim().replace(/^[?#&]/, "");
    if (!query) {
        return {};
    }
    var matches = /\?(.+)$/gi.exec(query);
    var str = matches ? matches[1] : query;
    return str.split("&").reduce(function(acc, item) {
        var param = item.split("=");
        if (param[1]) {
            acc[param[0]] = decodeURIComponent(param[1]);
        }
        return acc;
    }, {});
}
/**
   * URL encode the keys and values
   *
   * @default true
   */ /**
   * Skip keys with `null` as the value.
   * Keys with `undefined` as the value are always ignored.
   *
   * @default true
   */ function stringify(data) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (typeof data !== "object" || data === null) {
        return "";
    }
    options = _object_spread._({
        encode: true
    }, options);
    var encode = function(value) {
        return options.encode ? encodeURIComponent(value) : String(value);
    };
    return Object.keys(data).reduce(function(acc, key) {
        var value = data[key];
        if (value === undefined) {
            return acc;
        }
        if (value === null) {
            if (!options.skipNull) {
                acc.push([
                    encode(key),
                    ""
                ].join("="));
            }
            return acc;
        }
        if (Array.isArray(value)) {
            value.map(function(arrayItem) {
                acc.push("".concat(encode(key), "[]=").concat(encode(arrayItem)));
            }).join();
            return acc;
        }
        acc.push([
            encode(key),
            encode(value)
        ].join("="));
        return acc;
    }, []).join("&");
}
var querystring = {
    parse: parse,
    stringify: stringify
};

//# sourceMappingURL=querystring.js.map