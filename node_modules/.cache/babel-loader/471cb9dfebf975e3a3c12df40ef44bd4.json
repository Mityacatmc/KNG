{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _type_of } from \"@swc/helpers/_/_type_of\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from \"../../lib/select\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { debounce, getTitleFromChildren } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport { CustomSelectOption } from \"../CustomSelectOption/CustomSelectOption\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { Input } from \"../Input/Input\";\nimport { SelectMimicry } from \"../SelectMimicry/SelectMimicry\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { CustomSelectClearButton } from \"./CustomSelectClearButton\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiCustomSelect--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiCustomSelect--sizeY-compact\");\n\nvar findIndexAfter = function findIndexAfter() {\n  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],\n      startIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;\n\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n\n  return options.findIndex(function (option, i) {\n    return i > startIndex && !option.disabled;\n  });\n};\n\nvar findIndexBefore = function findIndexBefore() {\n  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],\n      endIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : options.length;\n  var result = -1;\n\n  if (endIndex <= 0) {\n    return result;\n  }\n\n  for (var i = endIndex - 1; i >= 0; i--) {\n    var option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n};\n\nvar warn = warnOnce(\"CustomSelect\");\n\nvar checkOptionsValueType = function checkOptionsValueType(options) {\n  if (new Set(options.map(function (item) {\n    return _type_of(item.value);\n  })).size > 1) {\n    warn(\"Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.\", \"error\");\n  }\n};\n\nfunction defaultRenderOptionFn(_param) {\n  var option = _param.option,\n      props = _object_without_properties(_param, [\"option\"]);\n\n  return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n}\n\nvar handleOptionDown = function handleOptionDown(e) {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(options, value, withClear) {\n  if (withClear && value === \"\") {\n    return -1;\n  }\n\n  var _options_findIndex;\n\n  return (_options_findIndex = options.findIndex(function (item) {\n    value = typeof item.value === \"number\" ? Number(value) : value;\n    return item.value === value;\n  })) !== null && _options_findIndex !== void 0 ? _options_findIndex : -1;\n}\n\nvar filter = function filter(options, inputValue, filterFn) {\n  return typeof filterFn === \"function\" ? options.filter(function (option) {\n    return filterFn(inputValue, option);\n  }) : options;\n};\n\nvar defaultOptions = [];\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\n\nexport function CustomSelect(props) {\n  var _selected;\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      opened = _React_useState[0],\n      setOpened = _React_useState[1];\n\n  var before = props.before,\n      name = props.name,\n      className = props.className,\n      getRef = props.getRef,\n      getRootRef = props.getRootRef,\n      popupDirection = props.popupDirection,\n      style = props.style,\n      onChange = props.onChange,\n      children = props.children,\n      onInputChangeProp = props.onInputChange,\n      renderDropdown = props.renderDropdown,\n      onOpen = props.onOpen,\n      onClose = props.onClose,\n      fetching = props.fetching,\n      forceDropdownPortal = props.forceDropdownPortal,\n      _props_selectType = props.selectType,\n      selectType = _props_selectType === void 0 ? \"default\" : _props_selectType,\n      autoHideScrollbar = props.autoHideScrollbar,\n      autoHideScrollbarDelay = props.autoHideScrollbarDelay,\n      _props_searchable = props.searchable,\n      searchable = _props_searchable === void 0 ? false : _props_searchable,\n      tmp = props.renderOption,\n      renderOptionProp = tmp === void 0 ? defaultRenderOptionFn : tmp,\n      tmp1 = props.options,\n      optionsProp = tmp1 === void 0 ? defaultOptions : tmp1,\n      _props_emptyText = props.emptyText,\n      emptyText = _props_emptyText === void 0 ? \"Ничего не найдено\" : _props_emptyText,\n      _props_filterFn = props.filterFn,\n      filterFn = _props_filterFn === void 0 ? defaultFilterFn : _props_filterFn,\n      iconProp = props.icon,\n      _props_ClearButton = props.ClearButton,\n      ClearButton = _props_ClearButton === void 0 ? CustomSelectClearButton : _props_ClearButton,\n      _props_allowClearButton = props.allowClearButton,\n      allowClearButton = _props_allowClearButton === void 0 ? false : _props_allowClearButton,\n      _props_dropdownOffsetDistance = props.dropdownOffsetDistance,\n      dropdownOffsetDistance = _props_dropdownOffsetDistance === void 0 ? 0 : _props_dropdownOffsetDistance,\n      _props_fixDropdownWidth = props.fixDropdownWidth,\n      fixDropdownWidth = _props_fixDropdownWidth === void 0 ? true : _props_fixDropdownWidth,\n      restProps = _object_without_properties(props, [\"before\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"style\", \"onChange\", \"children\", \"onInputChange\", \"renderDropdown\", \"onOpen\", \"onClose\", \"fetching\", \"forceDropdownPortal\", \"selectType\", \"autoHideScrollbar\", \"autoHideScrollbarDelay\", \"searchable\", \"renderOption\", \"options\", \"emptyText\", \"filterFn\", \"icon\", \"ClearButton\", \"allowClearButton\", \"dropdownOffsetDistance\", \"fixDropdownWidth\"]);\n\n  if (process.env.NODE_ENV === \"development\") {\n    checkOptionsValueType(optionsProp);\n  }\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  var containerRef = React.useRef(null);\n  var handleRootRef = useExternRef(containerRef, getRootRef);\n  var scrollBoxRef = React.useRef(null);\n  var selectElRef = useExternRef(getRef);\n\n  var _React_useState1 = _sliced_to_array(React.useState(-1), 2),\n      focusedOptionIndex = _React_useState1[0],\n      setFocusedOptionIndex = _React_useState1[1];\n\n  var _React_useState2 = _sliced_to_array(React.useState(props.value !== undefined), 2),\n      isControlledOutside = _React_useState2[0],\n      setIsControlledOutside = _React_useState2[1];\n\n  var _React_useState3 = _sliced_to_array(React.useState(\"\"), 2),\n      inputValue = _React_useState3[0],\n      setInputValue = _React_useState3[1];\n\n  var _props_value, _ref;\n\n  var _React_useState4 = _sliced_to_array(React.useState(function () {\n    return (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : props.defaultValue) !== null && _ref !== void 0 ? _ref : allowClearButton ? \"\" : undefined;\n  }), 2),\n      nativeSelectValue = _React_useState4[0],\n      setNativeSelectValue = _React_useState4[1];\n\n  var _React_useState5 = _sliced_to_array(React.useState(\"\"), 2),\n      keyboardInput = _React_useState5[0],\n      setKeyboardInput = _React_useState5[1];\n\n  var _React_useState6 = _sliced_to_array(React.useState(undefined), 2),\n      popperPlacement = _React_useState6[0],\n      setPopperPlacement = _React_useState6[1];\n\n  var _React_useState7 = _sliced_to_array(React.useState(optionsProp), 2),\n      options = _React_useState7[0],\n      setOptions = _React_useState7[1];\n\n  var _props_value1;\n\n  var _React_useState8 = _sliced_to_array(React.useState(findSelectedIndex(optionsProp, (_props_value1 = props.value) !== null && _props_value1 !== void 0 ? _props_value1 : props.defaultValue, allowClearButton)), 2),\n      selectedOptionIndex = _React_useState8[0],\n      setSelectedOptionIndex = _React_useState8[1];\n\n  React.useEffect(function () {\n    setIsControlledOutside(props.value !== undefined);\n\n    var _props_value;\n\n    setNativeSelectValue(function (nativeSelectValue) {\n      return (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue;\n    });\n  }, [props.value]);\n  useIsomorphicLayoutEffect(function () {\n    if (options.some(function (param) {\n      var value = param.value;\n      return nativeSelectValue === value;\n    }) || allowClearButton && nativeSelectValue === \"\") {\n      var _selectElRef_current;\n\n      var event = new Event(\"change\", {\n        bubbles: true\n      });\n      (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n  var selected = React.useMemo(function () {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n  var openedClassNames = React.useMemo(function () {\n    var _popperPlacement;\n\n    return opened && dropdownOffsetDistance === 0 && (((_popperPlacement = popperPlacement) === null || _popperPlacement === void 0 ? void 0 : _popperPlacement.includes(\"top\")) ? \"vkuiCustomSelect--pop-up\" : \"vkuiCustomSelect--pop-down\") || undefined;\n  }, [dropdownOffsetDistance, opened, popperPlacement]);\n  var resetKeyboardInput = React.useCallback(function () {\n    setKeyboardInput(\"\");\n  }, []);\n  var scrollToElement = React.useCallback(function (index) {\n    var center = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = dropdown ? dropdown.children[index] : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n  var isValidIndex = React.useCallback(function (index) {\n    var _options_length;\n\n    return index >= 0 && index < ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0);\n  }, [options.length]);\n  var focusOptionByIndex = React.useCallback(function (index) {\n    var scrollTo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n\n    var _option;\n\n    var _options_length;\n\n    if (index === undefined || index < 0 || index > ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0) - 1) {\n      return;\n    }\n\n    var option = options[index];\n\n    if ((_option = option) === null || _option === void 0 ? void 0 : _option.disabled) {\n      return;\n    }\n\n    if (scrollTo) {\n      scrollToElement(index);\n    } // Это оптимизация, прежде всего, под `onMouseOver`\n\n\n    setFocusedOptionIndex(function (focusedOptionIndex) {\n      return focusedOptionIndex !== index ? index : focusedOptionIndex;\n    });\n  }, [options, scrollToElement]);\n  var areOptionsShown = React.useCallback(function () {\n    return scrollBoxRef.current !== null;\n  }, []);\n  var setScrollBoxRef = React.useCallback(function (ref) {\n    scrollBoxRef.current = ref;\n\n    if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n      {\n        scrollToElement(selectedOptionIndex, true);\n      }\n    }\n  }, [isValidIndex, scrollToElement, selectedOptionIndex]);\n  var onKeyboardInput = React.useCallback(function (key) {\n    var fullInput = keyboardInput + key;\n    var optionIndex = options.findIndex(function (option) {\n      return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex !== undefined && optionIndex > -1) {\n      focusOptionByIndex(optionIndex);\n    }\n\n    setKeyboardInput(fullInput);\n  }, [focusOptionByIndex, keyboardInput, options]);\n  /**\n  * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n  *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n  */\n\n  var close = React.useCallback(function () {\n    var _onClose;\n\n    resetKeyboardInput();\n    setInputValue(\"\");\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    (_onClose = onClose) === null || _onClose === void 0 ? void 0 : _onClose();\n  }, [onClose, resetKeyboardInput]);\n  var selectOption = React.useCallback(function (index) {\n    var _item, _item1;\n\n    var item = options[index];\n    setNativeSelectValue((_item = item) === null || _item === void 0 ? void 0 : _item.value);\n    close();\n    var shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync = isControlledOutside && props.value !== nativeSelectValue && nativeSelectValue === ((_item1 = item) === null || _item1 === void 0 ? void 0 : _item1.value);\n\n    if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n      var _selectElRef_current;\n\n      var event = new Event(\"change\", {\n        bubbles: true\n      });\n      (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n    }\n  }, [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue]);\n  var selectFocused = React.useCallback(function () {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n  var open = React.useCallback(function () {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === \"function\") {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n  var onBlur = React.useCallback(function () {\n    var _selectElRef_current;\n\n    close();\n    var event = new Event(\"blur\");\n    (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n  }, [close, selectElRef]);\n  var resetFocusedOption = React.useCallback(function () {\n    setFocusedOptionIndex(-1);\n  }, []);\n  var onFocus = React.useCallback(function () {\n    var _selectElRef_current;\n\n    var event = new Event(\"focus\");\n    (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);\n  }, [selectElRef]);\n  var onClick = React.useCallback(function () {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n  var handleKeyUp = React.useMemo(function () {\n    return debounce(resetKeyboardInput, 1000);\n  }, [resetKeyboardInput]);\n  var focusOption = React.useCallback(function (type) {\n    var index = focusedOptionIndex;\n\n    if (type === \"next\") {\n      var nextIndex = findIndexAfter(options, index);\n      index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === \"prev\") {\n      var beforeIndex = findIndexBefore(options, index);\n      index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index);\n  }, [focusOptionByIndex, focusedOptionIndex, options]);\n  React.useEffect(function updateOptionsAndSelectedOptionIndex() {\n    var _props_value, _ref;\n\n    var value = (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue) !== null && _ref !== void 0 ? _ref : props.defaultValue;\n    var options = searchable && inputValue !== undefined ? filter(optionsProp, inputValue, filterFn) : optionsProp;\n    setOptions(options);\n    setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n  }, [filterFn, inputValue, nativeSelectValue, optionsProp, props.defaultValue, props.value, searchable, allowClearButton]);\n  /**\n  * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n  * выпадающему списку.\n  */\n\n  var onLabelClick = React.useCallback(function (e) {\n    var _scrollBoxRef_current;\n\n    if ((_scrollBoxRef_current = scrollBoxRef.current) === null || _scrollBoxRef_current === void 0 ? void 0 : _scrollBoxRef_current.contains(e.target)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  var onNativeSelectChange = function onNativeSelectChange(e) {\n    var newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value, allowClearButton);\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      var _onChange;\n\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n\n      (_onChange = onChange) === null || _onChange === void 0 ? void 0 : _onChange(e);\n    }\n  };\n\n  var onInputKeyDown = React.useCallback(function (event) {\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && areOptionsShown() && event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        areOptionsShown() && focusOption(\"prev\");\n        break;\n\n      case \"ArrowDown\":\n        areOptionsShown() && focusOption(\"next\");\n        break;\n\n      case \"Escape\":\n        close();\n        break;\n\n      case \"Enter\":\n        areOptionsShown() && selectFocused();\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, selectFocused]);\n  var onInputChange = React.useCallback(function (e) {\n    // TODO [>=6]: удалить `onInputChangeProp`.\n    if (onInputChangeProp) {\n      var options = onInputChangeProp(e, optionsProp);\n\n      if (options) {\n        if (process.env.NODE_ENV === \"development\") {\n          warn(\"Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет \" + \"проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.\");\n        }\n\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n    } else {\n      var options1 = filter(optionsProp, e.target.value, filterFn);\n      setOptions(options1);\n      setSelectedOptionIndex(findSelectedIndex(options1, nativeSelectValue, allowClearButton));\n    }\n\n    setInputValue(e.target.value);\n  }, [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton]);\n  var handleKeyDownSelect = React.useCallback(function (event) {\n    if (event.key.length === 1 && event.key !== \" \") {\n      onKeyboardInput(event.key);\n      return;\n    }\n\n    [\"ArrowUp\", \"ArrowDown\", \"Escape\", \"Enter\"].includes(event.key) && areOptionsShown() && event.preventDefault();\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        if (opened) {\n          areOptionsShown() && focusOption(\"prev\");\n        } else {\n          open();\n        }\n\n        break;\n\n      case \"ArrowDown\":\n        if (opened) {\n          areOptionsShown() && focusOption(\"next\");\n        } else {\n          open();\n        }\n\n        break;\n\n      case \"Escape\":\n        close();\n        break;\n\n      case \"Enter\":\n      case \"Spacebar\":\n      case \" \":\n        if (opened) {\n          areOptionsShown() && selectFocused();\n        } else {\n          open();\n        }\n\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused]);\n  var handleOptionClick = React.useCallback(function (e) {\n    var _e_currentTarget_parentNode;\n\n    var index = Array.prototype.indexOf.call((_e_currentTarget_parentNode = e.currentTarget.parentNode) === null || _e_currentTarget_parentNode === void 0 ? void 0 : _e_currentTarget_parentNode.children, e.currentTarget);\n    var option = options[index];\n\n    if (option && !option.disabled) {\n      selectOption(index);\n    }\n  }, [options, selectOption]);\n  var handleOptionHover = React.useCallback(function (e) {\n    var _e_currentTarget_parentNode;\n\n    focusOptionByIndex(Array.prototype.indexOf.call((_e_currentTarget_parentNode = e.currentTarget.parentNode) === null || _e_currentTarget_parentNode === void 0 ? void 0 : _e_currentTarget_parentNode.children, e.currentTarget), false);\n  }, [focusOptionByIndex]);\n  var renderOption = React.useCallback(function (option, index) {\n    var hovered = index === focusedOptionIndex;\n    var selected = index === selectedOptionIndex;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(option.value)\n    }, renderOptionProp({\n      option: option,\n      hovered: hovered,\n      children: option.label,\n      selected: selected,\n      disabled: option.disabled,\n      onClick: handleOptionClick,\n      onMouseDown: handleOptionDown,\n      // Используем `onMouseOver` вместо `onMouseEnter`.\n      // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n      //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n      //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n      //  2. Если это тач-устройство.\n      //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n      //     но не на тот, на который нажали в первый раз.\n      // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n      onMouseOver: handleOptionHover\n    }));\n  }, [focusedOptionIndex, handleOptionClick, handleOptionHover, renderOptionProp, selectedOptionIndex]);\n  var resolvedContent = React.useMemo(function () {\n    var _options;\n\n    var defaultDropdownContent = ((_options = options) === null || _options === void 0 ? void 0 : _options.length) > 0 ? options.map(renderOption) : /*#__PURE__*/React.createElement(Footnote, {\n      className: \"vkuiCustomSelect__empty\"\n    }, emptyText);\n\n    if (typeof renderDropdown === \"function\") {\n      return renderDropdown({\n        defaultDropdownContent: defaultDropdownContent\n      });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n  var controlledValueSet = isControlledOutside && props.value !== \"\";\n  var uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== \"\";\n  var clearButtonShown = allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n  var clearButton = React.useMemo(function () {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(ClearButton, {\n      className: iconProp === undefined ? \"vkuiCustomSelect--clear-icon\" : undefined,\n      onClick: function onClick() {\n        return setNativeSelectValue(\"\");\n      }\n    });\n  }, [clearButtonShown, ClearButton, iconProp]);\n  var icon = React.useMemo(function () {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: clearButtonShown ? \"vkuiCustomSelect__dropdown-icon\" : undefined,\n      opened: opened\n    });\n  }, [clearButtonShown, iconProp, opened]);\n  var afterIcons = (icon || clearButtonShown) && /*#__PURE__*/React.createElement(React.Fragment, null, clearButton, icon);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: classNames(\"vkuiCustomSelect\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], className),\n    style: style,\n    ref: handleRootRef,\n    onClick: onLabelClick\n  }, opened && searchable ? /*#__PURE__*/React.createElement(Input, _object_spread_props(_object_spread({}, restProps), {\n    autoFocus: true,\n    onBlur: onBlur,\n    className: openedClassNames,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onChange: onInputChange,\n    // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n    // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n    // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n    onClick: props.onClick,\n    before: before,\n    after: afterIcons,\n    mode: getFormFieldModeFromSelectType(selectType)\n  })) : /*#__PURE__*/React.createElement(SelectMimicry, _object_spread_props(_object_spread({}, restProps), {\n    \"aria-hidden\": true,\n    onClick: onClick,\n    onKeyDown: handleKeyDownSelect,\n    onKeyUp: handleKeyUp,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: openedClassNames,\n    before: before,\n    after: afterIcons,\n    selectType: selectType\n  }), (_selected = selected) === null || _selected === void 0 ? void 0 : _selected.label), /*#__PURE__*/React.createElement(\"select\", {\n    ref: selectElRef,\n    name: name,\n    onChange: onNativeSelectChange,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onClick: props.onClick,\n    value: nativeSelectValue,\n    \"aria-hidden\": true,\n    className: \"vkuiCustomSelect__control\"\n  }, allowClearButton && /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\"\n  }), optionsProp.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: \"\".concat(item.value),\n      value: item.value\n    });\n  })), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: containerRef,\n    placement: popupDirection,\n    scrollBoxRef: setScrollBoxRef,\n    onPlacementChange: setPopperPlacement,\n    onMouseLeave: resetFocusedOption,\n    fetching: fetching,\n    offsetDistance: dropdownOffsetDistance,\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal,\n    autoHideScrollbar: autoHideScrollbar,\n    autoHideScrollbarDelay: autoHideScrollbarDelay\n  }, resolvedContent));\n}","map":{"version":3,"mappings":"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","names":["React","classNames","useAdaptivity","useExternRef","SizeType","defaultFilterFn","getFormFieldModeFromSelectType","useIsomorphicLayoutEffect","debounce","getTitleFromChildren","warnOnce","CustomSelectDropdown","CustomSelectOption","DropdownIcon","Input","SelectMimicry","Footnote","CustomSelectClearButton","sizeYClassNames","none","COMPACT","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","checkOptionsValueType","Set","map","item","_type_of","value","size","defaultRenderOptionFn","_param","props","handleOptionDown","e","preventDefault","findSelectedIndex","withClear","Number","filter","inputValue","filterFn","defaultOptions","CustomSelect","selected","useState","opened","setOpened","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChange","onInputChangeProp","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","selectType","_props_selectType","autoHideScrollbar","autoHideScrollbarDelay","searchable","_props_searchable","renderOptionProp","renderOption","optionsProp","emptyText","_props_emptyText","_props_filterFn","icon","iconProp","ClearButton","allowClearButton","_props_allowClearButton","_props_dropdownOffsetDistance","dropdownOffsetDistance","_props_fixDropdownWidth","fixDropdownWidth","restProps","process","env","NODE_ENV","sizeY","_useAdaptivity_sizeY","containerRef","useRef","handleRootRef","scrollBoxRef","selectElRef","focusedOptionIndex","setFocusedOptionIndex","undefined","isControlledOutside","setIsControlledOutside","setInputValue","defaultValue","nativeSelectValue","setNativeSelectValue","keyboardInput","setKeyboardInput","popperPlacement","setPopperPlacement","setOptions","selectedOptionIndex","setSelectedOptionIndex","useEffect","some","event","Event","bubbles","current","dispatchEvent","useMemo","openedClassNames","includes","resetKeyboardInput","useCallback","scrollToElement","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","isValidIndex","focusOptionByIndex","scrollTo","areOptionsShown","setScrollBoxRef","ref","onKeyboardInput","key","fullInput","optionIndex","label","toLowerCase","close","selectOption","shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync","selectFocused","open","onBlur","resetFocusedOption","onFocus","onClick","handleKeyUp","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","onLabelClick","contains","target","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputKeyDown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","handleOptionHover","hovered","Fragment","concat","onMouseDown","onMouseOver","resolvedContent","defaultDropdownContent","controlledValueSet","uncontrolledValueSet","clearButtonShown","clearButton","afterIcons","REGULAR","autoFocus","onKeyDown","after","mode","aria-hidden","onKeyUp","select","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\components\\CustomSelect\\CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport type { PlacementWithAuto } from '../../lib/floating';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { debounce, getTitleFromChildren } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { Input } from '../Input/Input';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport { SelectType } from '../Select/Select';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { CustomSelectClearButton, CustomSelectClearButtonProps } from './CustomSelectClearButton';\nimport styles from './CustomSelect.module.css';\n\nconst sizeYClassNames = {\n  none: styles['CustomSelect--sizeY-none'],\n  [SizeType.COMPACT]: styles['CustomSelect--sizeY-compact'],\n};\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn({ option, ...props }: CustomSelectOptionProps): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(\n  options: CustomSelectOptionInterface[],\n  value: SelectValue,\n  withClear: boolean,\n) {\n  if (withClear && value === '') {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = (\n  options: SelectProps['options'],\n  inputValue: string,\n  filterFn: SelectProps['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface SelectProps extends NativeSelectProps, FormFieldProps, TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В **v6** из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[],\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (option: Partial<CustomSelectOptionInterface>) => string,\n      ) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   *\n   * > ⚠️  Важно: cвойство опции `disabled` должно выставляться только через проп `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе селект не будет знать об актуальном состоянии\n   * опции.\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Кастомная кнопка для очистки значения.\n   * Должна принимать обязательное свойство `onClick`\n   */\n  ClearButton?: React.ComponentType<CustomSelectClearButtonProps>;\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props: SelectProps) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon: iconProp,\n    ClearButton = CustomSelectClearButton,\n    allowClearButton = false,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const containerRef = React.useRef<HTMLLabelElement>(null);\n  const handleRootRef = useExternRef(containerRef, getRootRef);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = useExternRef(getRef);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    () => props.value ?? props.defaultValue ?? (allowClearButton ? '' : undefined),\n  );\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const [popperPlacement, setPopperPlacement] = React.useState<PlacementWithAuto | undefined>(\n    undefined,\n  );\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? props.defaultValue, allowClearButton),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      options.some(({ value }) => nativeSelectValue === value) ||\n      (allowClearButton && nativeSelectValue === '')\n    ) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      (opened &&\n        dropdownOffsetDistance === 0 &&\n        (popperPlacement?.includes('top')\n          ? styles['CustomSelect--pop-up']\n          : styles['CustomSelect--pop-down'])) ||\n      undefined,\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      const fullInput = keyboardInput + key;\n\n      const optionIndex = options.findIndex((option) => {\n        return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex !== undefined && optionIndex > -1) {\n        focusOptionByIndex(optionIndex);\n      }\n\n      setKeyboardInput(fullInput);\n    },\n    [focusOptionByIndex, keyboardInput, options],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose?.();\n  }, [onClose, resetKeyboardInput]);\n\n  const selectOption = React.useCallback(\n    (index: number) => {\n      const item = options[index];\n\n      setNativeSelectValue(item?.value);\n      close();\n\n      const shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync =\n        isControlledOutside &&\n        props.value !== nativeSelectValue &&\n        nativeSelectValue === item?.value;\n\n      if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {\n        const event = new Event('change', { bubbles: true });\n        selectElRef.current?.dispatchEvent(event);\n      }\n    },\n    [close, options, selectElRef, isControlledOutside, props.value, nativeSelectValue],\n  );\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {\n      return;\n    }\n\n    selectOption(focusedOptionIndex);\n  }, [focusedOptionIndex, isValidIndex, selectOption]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('blur');\n    selectElRef.current?.dispatchEvent(event);\n  }, [close, selectElRef]);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focus');\n    selectElRef.current?.dispatchEvent(event);\n  }, [selectElRef]);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? props.defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      props.defaultValue,\n      props.value,\n      searchable,\n      allowClearButton,\n    ],\n  );\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  const onLabelClick = React.useCallback((e: React.MouseEvent<HTMLLabelElement>) => {\n    if (scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(\n      options,\n      e.currentTarget.value,\n      allowClearButton,\n    );\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(\n    (event) => {\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          areOptionsShown() && focusOption('prev');\n          break;\n        case 'ArrowDown':\n          areOptionsShown() && focusOption('next');\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n          areOptionsShown() && selectFocused();\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, selectFocused],\n  );\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO [>=6]: удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp, allowClearButton],\n  );\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectOption(index);\n      }\n    },\n    [options, selectOption],\n  );\n\n  const handleOptionHover = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      focusOptionByIndex(\n        Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n        false,\n      );\n    },\n    [focusOptionByIndex],\n  );\n\n  const renderOption = React.useCallback(\n    (option: CustomSelectOptionInterface, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseOver` вместо `onMouseEnter`.\n            // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n            //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n            //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n            //  2. Если это тач-устройство.\n            //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n            //     но не на тот, на который нажали в первый раз.\n            // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n            onMouseOver: handleOptionHover,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      handleOptionHover,\n      renderOptionProp,\n      selectedOptionIndex,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  const controlledValueSet = isControlledOutside && props.value !== '';\n  const uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';\n  const clearButtonShown =\n    allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);\n\n  const clearButton = React.useMemo(() => {\n    if (!clearButtonShown) {\n      return null;\n    }\n\n    return (\n      <ClearButton\n        className={iconProp === undefined ? styles['CustomSelect--clear-icon'] : undefined}\n        onClick={() => setNativeSelectValue('')}\n      />\n    );\n  }, [clearButtonShown, ClearButton, iconProp]);\n\n  const icon = React.useMemo(() => {\n    if (iconProp !== undefined) {\n      return iconProp;\n    }\n\n    return (\n      <DropdownIcon\n        className={clearButtonShown ? styles['CustomSelect__dropdown-icon'] : undefined}\n        opened={opened}\n      />\n    );\n  }, [clearButtonShown, iconProp, opened]);\n\n  const afterIcons = (icon || clearButtonShown) && (\n    <React.Fragment>\n      {clearButton}\n      {icon}\n    </React.Fragment>\n  );\n\n  return (\n    <label\n      className={classNames(\n        styles['CustomSelect'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      ref={handleRootRef}\n      onClick={onLabelClick}\n    >\n      {opened && searchable ? (\n        <Input\n          {...restProps}\n          autoFocus\n          onBlur={onBlur}\n          className={openedClassNames}\n          value={inputValue}\n          onKeyDown={onInputKeyDown}\n          onChange={onInputChange}\n          // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n          // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n          // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n          onClick={props.onClick}\n          before={before}\n          after={afterIcons}\n          mode={getFormFieldModeFromSelectType(selectType)}\n        />\n      ) : (\n        <SelectMimicry\n          {...restProps}\n          aria-hidden\n          onClick={onClick}\n          onKeyDown={handleKeyDownSelect}\n          onKeyUp={handleKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={openedClassNames}\n          before={before}\n          after={afterIcons}\n          selectType={selectType}\n        >\n          {selected?.label}\n        </SelectMimicry>\n      )}\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n      >\n        {allowClearButton && <option key=\"\" value=\"\" />}\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </label>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}