{"ast":null,"code":"import { canUseDOM } from \"./dom\";\nexport function animate(param) {\n  var duration = param.duration,\n      timing = param.timing,\n      draw = param.draw;\n\n  if (!canUseDOM) {\n    return;\n  }\n\n  var start = performance.now();\n  requestAnimationFrame(function animate(time) {\n    var timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    var progress = timing(timeFraction);\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAmBA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAsE;MAAnDC,WAAFD,MAAEC;MAAUC,SAAZF,MAAYE;MAAQC,OAApBH,MAAoBG;;EAC1C,IAAI,CAACL,SAAL,EAAgB;IACd;EACF;;EAEA,IAAMM,QAAQC,YAAYC,GAAZD,EAAd;EAEAE,sBAAsB,SAASR,OAAT,CAAiBS,IAAjB,EAA6B;IACjD,IAAIC,eAAe,CAACD,OAAOJ,KAAR,IAAiBH,QAApC;;IAEA,IAAIQ,eAAe,CAAnB,EAAsB;MACpBA,eAAe,CAAfA;IACF;;IAEA,IAAMC,WAAWR,OAAOO,YAAPP,CAAjB;IAEAC,KAAKO,QAALP;;IAEA,IAAIM,eAAe,CAAnB,EAAsB;MACpBF,sBAAsBR,OAAtBQ;IACF;EACF,CAdAA;AAeF","names":["canUseDOM","animate","param","duration","timing","draw","start","performance","now","requestAnimationFrame","time","timeFraction","progress"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\lib\\animate.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n}\n\nexport function animate({ duration, timing, draw }: AnimateArgumentsInterface): void {\n  if (!canUseDOM) {\n    return;\n  }\n\n  const start = performance.now();\n\n  requestAnimationFrame(function animate(time: number): void {\n    let timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}