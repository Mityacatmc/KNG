{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport * as React from \"react\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { generateVKUITokensClassName } from \"../../helpers/generateVKUITokensClassName\";\nimport { useAutoDetectAppearance } from \"../../hooks/useAutoDetectAppearance\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { useDOM } from \"../../lib/dom\";\nimport { TokensClassProvider } from \"../../lib/tokensClassProvider\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { addClassNameToElement, removeClassNameFromElement } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ConfigProviderContext, useConfigProvider, WebviewType } from \"./ConfigProviderContext\";\nvar warn = warnOnce(\"ConfigProvider\");\n/**\n * @see https://vkcom.github.io/VKUI/#/ConfigProvider\n */\n\nexport var ConfigProvider = function ConfigProvider(props) {\n  var parentConfig = useConfigProvider();\n\n  var _$_object_spread = _object_spread({}, parentConfig, props),\n      children = _$_object_spread.children,\n      webviewType = _$_object_spread.webviewType,\n      hasCustomPanelHeaderAfterMerged = _$_object_spread.hasCustomPanelHeaderAfter,\n      customPanelHeaderAfterMinWidth = _$_object_spread.customPanelHeaderAfterMinWidth,\n      isWebView = _$_object_spread.isWebView,\n      transitionMotionEnabled = _$_object_spread.transitionMotionEnabled,\n      platform = _$_object_spread.platform,\n      locale = _$_object_spread.locale,\n      appearanceProp = _$_object_spread.appearance,\n      _object_spread_onDetectAppearanceByBridge = _$_object_spread.onDetectAppearanceByBridge,\n      onDetectAppearanceByBridge = _object_spread_onDetectAppearanceByBridge === void 0 ? noop : _object_spread_onDetectAppearanceByBridge; // TODO [>=6]: Удалить данный бэкпорт\n\n\n  var hasCustomPanelHeaderAfter = props.webviewType && props.hasCustomPanelHeaderAfter === undefined ? props.webviewType === WebviewType.VKAPPS : hasCustomPanelHeaderAfterMerged;\n\n  if (process.env.NODE_ENVIRONMENT === \"development\") {\n    // TODO [>=6]: удалить warn\n    var webviewTypeRule = \"\";\n\n    if (props.webviewType) {\n      webviewTypeRule = props.webviewType === WebviewType.INTERNAL ? \"3. замените webviewType={WebviewType.INTERNAL} на hasCustomPanelHeaderAfterProp={false}\" : \"3. замените webviewType={WebviewType.VKAPPS} на hasCustomPanelHeaderAfterProp={true}\";\n    }\n\n    warn(\"[@vkontakte/vk-bridge's deprecated] Если вы используете VK Bridge, то:\\n\\n1. используйте хук useAppearance() из @vkontakte/vk-bridge-react и результат передайте в параметр appearance;\\n2. передайте bridge.isWebView() в параметр isWebView;\\n\".concat(webviewTypeRule, \"\\n\\nПодробности см. https://github.com/VKCOM/VKUI/issues/5049\\n\"));\n  } // TODO [>=6]: удалить использование хука\n\n\n  var appearance = useAutoDetectAppearance(appearanceProp, onDetectAppearanceByBridge);\n  var document = useDOM().document; // TODO [>=6]: переместить хук в AppRoot (см. https://github.com/VKCOM/VKUI/issues/4810).\n\n  useIsomorphicLayoutEffect(function attachVKUITokensClassNameToBody() {\n    if (!document) {\n      return;\n    }\n\n    var VKUITokensClassName = generateVKUITokensClassName(platform, appearance);\n    addClassNameToElement(document.body, VKUITokensClassName);\n    return function () {\n      removeClassNameFromElement(document.body, VKUITokensClassName);\n    };\n  }, [platform, appearance]);\n  var configContext = useObjectMemo({\n    webviewType: webviewType,\n    hasCustomPanelHeaderAfter: hasCustomPanelHeaderAfter,\n    customPanelHeaderAfterMinWidth: customPanelHeaderAfterMinWidth,\n    isWebView: isWebView,\n    transitionMotionEnabled: transitionMotionEnabled,\n    platform: platform,\n    locale: locale,\n    appearance: appearance\n  });\n  return /*#__PURE__*/React.createElement(ConfigProviderContext.Provider, {\n    value: configContext\n  }, /*#__PURE__*/React.createElement(TokensClassProvider, {\n    platform: platform,\n    appearance: appearance\n  }, children));\n};","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,2BAAT,QAA4C,2CAA5C;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,QAAkE,iBAAlE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACEC,qBADF,EAGEC,iBAHF,EAIEC,WAJF,QAKO,yBALP;AAOA,IAAMC,OAAOJ,SAAS,gBAATA,CAAb;AAcA;;;;AAGA,OAAO,IAAMK,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAACA;EAC7B,IAAMC,eAAeL,mBAArB;;EAEA,IAWIM,sCACCD,YADD,EAECD,KAFD,CAXJ;EAAA,IACEG,WAUED,iBAVFC,QADF;EAAA,IAEEC,cASEF,iBATFE,WAFF;EAAA,IAGEC,+BAA2BC,GAQzBJ,iBARFG,yBAHF;EAAA,IAIEE,iCAOEL,iBAPFK,8BAJF;EAAA,IAKEC,YAMEN,iBANFM,SALF;EAAA,IAMEC,0BAKEP,iBALFO,uBANF;EAAA,IAOEC,WAIER,iBAJFQ,QAPF;EAAA,IAQEC,SAGET,iBAHFS,MARF;EAAA,IASEC,cAAYC,GAEVX,iBAFFU,UATF;EAAA,IASEA,4CAEEV,iBADFY,0BAVF;EAAA,IAUEA,oFAA6B7B,IAA7B6B,GAA6B7B,yCAV/B,CAH6Be,CAmB7B;;;EACA,IAAMK,4BACJL,MAAMI,WAANJ,IAAqBA,MAAMK,yBAANL,KAAoCe,SAAzDf,GACIA,MAAMI,WAANJ,KAAsBH,YAAYmB,MADtChB,GAEIM,+BAHN;;EAKA,IAAIW,QAAQC,GAARD,CAAYE,gBAAZF,KAAiC,aAArC,EAAoD;IAClD;IACA,IAAIG,kBAAkB,EAAtB;;IACA,IAAIpB,MAAMI,WAAV,EAAuB;MACrBgB,kBACEpB,MAAMI,WAANJ,KAAsBH,YAAYwB,QAAlCrB,GACI,yFADJA,GAEI,sFAHNoB;IAIF;;IACAtB,KAAK,mPAISwB,MAJT,CAIPF,eAJO,EAIS,iEAJT,CAALtB;EAQF,CA1C6BE,CA4C7B;;;EACA,IAAMY,aAAazB,wBAAwB0B,cAAxB1B,EAAwC2B,0BAAxC3B,CAAnB;EAEA,IAAMoC,QAAEA,GAAalC,SAAbkC,QAAR,CA/C6BvB,CAiD7B;;EACAT,0BACE,SAASiC,+BAAT,GAASA;IACP,IAAI,CAACD,QAAL,EAAe;MACb;IACF;;IAEA,IAAME,sBAAsBvC,4BAA4BwB,QAA5BxB,EAAsC0B,UAAtC1B,CAA5B;IAEAM,sBAAsB+B,SAASG,IAA/BlC,EAAqCiC,mBAArCjC;IACA,OAAO;MACLC,2BAA2B8B,SAASG,IAApCjC,EAA0CgC,mBAA1ChC;IACF,CAFA;EAGF,CAZFF,EAaE,CAACmB,QAAD,EAAWE,UAAX,CAbFrB;EAgBA,IAAMoC,gBAAgBvC,cAAc;IAClCgB,wBADkC;IAElCC,oDAFkC;IAGlCE,8DAHkC;IAIlCC,oBAJkC;IAKlCC,gDALkC;IAMlCC,kBANkC;IAOlCC,cAPkC;IAQlCC;EARkC,CAAdxB,CAAtB;EAWA,oBACEJ,oBAACW,sBAAsBiC,QAAvB,EAA+B;IAACC,OAAOF;EAAR,CAA/B,eACE3C,oBAACM,mBAAD,EAACA;IAAoBoB,UAAUA,QAA9BpB;IAAwCsB,YAAYA;EAApDtB,CAAD,EACGa,QADH,CADF,CADF;AAOF,CApFO","names":["React","noop","generateVKUITokensClassName","useAutoDetectAppearance","useObjectMemo","useDOM","TokensClassProvider","useIsomorphicLayoutEffect","addClassNameToElement","removeClassNameFromElement","warnOnce","ConfigProviderContext","useConfigProvider","WebviewType","warn","ConfigProvider","props","parentConfig","_$_object_spread","children","webviewType","hasCustomPanelHeaderAfter","hasCustomPanelHeaderAfterMerged","customPanelHeaderAfterMinWidth","isWebView","transitionMotionEnabled","platform","locale","appearance","appearanceProp","onDetectAppearanceByBridge","undefined","VKAPPS","process","env","NODE_ENVIRONMENT","webviewTypeRule","INTERNAL","concat","document","attachVKUITokensClassNameToBody","VKUITokensClassName","body","configContext","Provider","value"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\components\\ConfigProvider\\ConfigProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { noop } from '@vkontakte/vkjs';\nimport { generateVKUITokensClassName } from '../../helpers/generateVKUITokensClassName';\nimport { useAutoDetectAppearance } from '../../hooks/useAutoDetectAppearance';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { useDOM } from '../../lib/dom';\nimport { TokensClassProvider } from '../../lib/tokensClassProvider';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { addClassNameToElement, removeClassNameFromElement } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  useConfigProvider,\n  WebviewType,\n} from './ConfigProviderContext';\n\nconst warn = warnOnce('ConfigProvider');\n\nexport interface ConfigProviderProps extends Partial<ConfigProviderContextInterface> {\n  /**\n   * > ⚠️ В **v6** метод будет удалён (см. https://github.com/VKCOM/VKUI/issues/5049).\n   * > Используйте хук `useAppearance()` из библиотеки `@vkontakte/vk-bridge-react`, если вам нужно\n   * > определять, что `appearance` был передан через VK Bridge.\n   *\n   * @deprecated v5.8.0\n   */\n  onDetectAppearanceByBridge?: () => void; // TODO [>=6]: удалить\n  children: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ConfigProvider\n */\nexport const ConfigProvider = (props: ConfigProviderProps) => {\n  const parentConfig = useConfigProvider();\n\n  const {\n    children,\n    webviewType,\n    hasCustomPanelHeaderAfter: hasCustomPanelHeaderAfterMerged,\n    customPanelHeaderAfterMinWidth,\n    isWebView,\n    transitionMotionEnabled,\n    platform,\n    locale,\n    appearance: appearanceProp,\n    onDetectAppearanceByBridge = noop,\n  } = {\n    ...parentConfig,\n    ...props,\n  };\n\n  // TODO [>=6]: Удалить данный бэкпорт\n  const hasCustomPanelHeaderAfter =\n    props.webviewType && props.hasCustomPanelHeaderAfter === undefined\n      ? props.webviewType === WebviewType.VKAPPS\n      : hasCustomPanelHeaderAfterMerged;\n\n  if (process.env.NODE_ENVIRONMENT === 'development') {\n    // TODO [>=6]: удалить warn\n    let webviewTypeRule = '';\n    if (props.webviewType) {\n      webviewTypeRule =\n        props.webviewType === WebviewType.INTERNAL\n          ? '3. замените webviewType={WebviewType.INTERNAL} на hasCustomPanelHeaderAfterProp={false}'\n          : '3. замените webviewType={WebviewType.VKAPPS} на hasCustomPanelHeaderAfterProp={true}';\n    }\n    warn(`[@vkontakte/vk-bridge's deprecated] Если вы используете VK Bridge, то:\n\n1. используйте хук useAppearance() из @vkontakte/vk-bridge-react и результат передайте в параметр appearance;\n2. передайте bridge.isWebView() в параметр isWebView;\n${webviewTypeRule}\n\nПодробности см. https://github.com/VKCOM/VKUI/issues/5049\n`);\n  }\n\n  // TODO [>=6]: удалить использование хука\n  const appearance = useAutoDetectAppearance(appearanceProp, onDetectAppearanceByBridge);\n\n  const { document } = useDOM();\n\n  // TODO [>=6]: переместить хук в AppRoot (см. https://github.com/VKCOM/VKUI/issues/4810).\n  useIsomorphicLayoutEffect(\n    function attachVKUITokensClassNameToBody() {\n      if (!document) {\n        return;\n      }\n\n      const VKUITokensClassName = generateVKUITokensClassName(platform, appearance);\n\n      addClassNameToElement(document.body, VKUITokensClassName);\n      return () => {\n        removeClassNameFromElement(document.body, VKUITokensClassName);\n      };\n    },\n    [platform, appearance],\n  );\n\n  const configContext = useObjectMemo({\n    webviewType,\n    hasCustomPanelHeaderAfter,\n    customPanelHeaderAfterMinWidth,\n    isWebView,\n    transitionMotionEnabled,\n    platform,\n    locale,\n    appearance,\n  });\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      <TokensClassProvider platform={platform} appearance={appearance}>\n        {children}\n      </TokensClassProvider>\n    </ConfigProviderContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}