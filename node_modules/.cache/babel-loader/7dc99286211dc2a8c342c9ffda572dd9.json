{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { blurActiveElement, canUseDOM, useDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { animationEvent } from \"../../lib/supportEvents\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useScroll } from \"../AppRoot/ScrollContext\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { NavTransitionDirectionProvider } from \"../NavTransitionDirectionContext/NavTransitionDirectionContext\";\nimport { useSplitCol } from \"../SplitCol/SplitColContext\";\nimport { Touch } from \"../Touch/Touch\";\nimport { swipeBackExcluded } from \"./utils\";\nvar SWIPE_BACK_AREA = 70;\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nexport var scrollsCache = {};\nvar warn = warnOnce(\"View\");\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\n\nexport var View = function View(_param) {\n  var activePanelProp = _param.activePanel,\n      history = _param.history,\n      nav = _param.nav,\n      onTransition = _param.onTransition,\n      onSwipeBack = _param.onSwipeBack,\n      onSwipeBackStart = _param.onSwipeBackStart,\n      onSwipeBackCancelProp = _param.onSwipeBackCancel,\n      children = _param.children,\n      className = _param.className,\n      restProps = _object_without_properties(_param, [\"activePanel\", \"history\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"children\", \"className\"]);\n\n  var _configProvider, _splitCol;\n\n  var scrolls = React.useRef(scrollsCache[getNavId({\n    nav: nav,\n    id: restProps.id\n  })] || {});\n  var afterTransition = React.useRef(noop);\n  React.useEffect(function () {\n    return function () {\n      var id = getNavId({\n        nav: nav,\n        id: restProps.id\n      });\n\n      if (id) {\n        scrollsCache[id] = scrolls.current;\n      }\n    };\n  });\n  var panelNodes = React.useRef({});\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window,\n      document = _useDOM.document;\n\n  var scroll = useScroll();\n  var configProvider = useConfigProvider();\n  var splitCol = useSplitCol();\n  var platform = usePlatform();\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      animated = _React_useState[0],\n      setAnimated = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState([activePanelProp]), 2),\n      visiblePanels = _React_useState1[0],\n      setVisiblePanels = _React_useState1[1];\n\n  var _React_useState2 = _sliced_to_array(React.useState(activePanelProp), 2),\n      activePanel = _React_useState2[0],\n      setActivePanel = _React_useState2[1];\n\n  var _React_useState3 = _sliced_to_array(React.useState(undefined), 2),\n      isBack = _React_useState3[0],\n      setIsBack = _React_useState3[1];\n\n  var _React_useState4 = _sliced_to_array(React.useState(null), 2),\n      prevPanel = _React_useState4[0],\n      setPrevPanel = _React_useState4[1];\n\n  var _React_useState5 = _sliced_to_array(React.useState(null), 2),\n      nextPanel = _React_useState5[0],\n      setNextPanel = _React_useState5[1];\n\n  var _React_useState6 = _sliced_to_array(React.useState(undefined), 2),\n      swipingBack = _React_useState6[0],\n      setSwipingBack = _React_useState6[1];\n\n  var _React_useState7 = _sliced_to_array(React.useState(false), 2),\n      swipeBackPrevented = _React_useState7[0],\n      setSwipeBackPrevented = _React_useState7[1];\n\n  var _React_useState8 = _sliced_to_array(React.useState(0), 2),\n      swipeBackStartX = _React_useState8[0],\n      setSwipeBackStartX = _React_useState8[1];\n\n  var _React_useState9 = _sliced_to_array(React.useState(0), 2),\n      swipeBackShift = _React_useState9[0],\n      setSwipeBackShift = _React_useState9[1];\n\n  var _React_useState10 = _sliced_to_array(React.useState(null), 2),\n      swipeBackNextPanel = _React_useState10[0],\n      setSwipeBackNextPanel = _React_useState10[1];\n\n  var _React_useState11 = _sliced_to_array(React.useState(null), 2),\n      swipeBackPrevPanel = _React_useState11[0],\n      setSwipeBackPrevPanel = _React_useState11[1];\n\n  var _React_useState12 = _sliced_to_array(React.useState(null), 2),\n      swipeBackResult = _React_useState12[0],\n      setSwipeBackResult = _React_useState12[1];\n\n  var _React_useState13 = _sliced_to_array(React.useState(false), 2),\n      browserSwipe = _React_useState13[0],\n      setBrowserSwipe = _React_useState13[1];\n\n  var prevActivePanel = usePrevious(activePanelProp);\n  var prevSwipingBack = usePrevious(swipingBack);\n  var prevBrowserSwipe = usePrevious(browserSwipe);\n  var prevSwipeBackResult = usePrevious(swipeBackResult);\n  var prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  var prevOnTransition = usePrevious(onTransition);\n  var panels = React.Children.toArray(children).filter(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    return panelId !== undefined && visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n  });\n  var disableAnimation = ((_configProvider = configProvider) === null || _configProvider === void 0 ? void 0 : _configProvider.transitionMotionEnabled) === false || !((_splitCol = splitCol) === null || _splitCol === void 0 ? void 0 : _splitCol.animate) || platform === Platform.VKCOM;\n\n  var pickPanel = function pickPanel(id) {\n    if (id === null) {\n      return null;\n    }\n\n    return panelNodes.current[id];\n  };\n\n  var flushTransition = React.useCallback(function (prevPanel, isBackTransition) {\n    if (isBackTransition) {\n      scrolls.current[prevPanel] = 0;\n    }\n\n    setPrevPanel(null);\n    setNextPanel(null);\n    setVisiblePanels([activePanelProp]);\n    setActivePanel(activePanelProp);\n    setAnimated(false);\n    setIsBack(isBackTransition);\n\n    afterTransition.current = function () {\n      var _scroll;\n\n      (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n      onTransition && onTransition({\n        isBack: isBackTransition,\n        from: prevPanel,\n        to: activePanelProp\n      });\n    };\n  }, [activePanelProp, onTransition, scroll]);\n  useIsomorphicLayoutEffect(function () {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n  var transitionEndHandler = React.useCallback(function (e) {\n    if ((!e || [\"vkuianimation-ios-next-forward\", \"vkuianimation-ios-prev-back\", \"vkuianimation-view-next-forward\", \"vkuianimation-view-prev-back\"].includes(e.animationName)) && prevPanel !== null) {\n      flushTransition(prevPanel, Boolean(isBack));\n    }\n  }, [flushTransition, isBack, prevPanel]);\n  var waitTransitionFinish = useWaitTransitionFinish().waitTransitionFinish;\n  var animationFinishTimeout = useTimeout(transitionEndHandler, platform === Platform.IOS ? 600 : 300);\n  var onSwipeBackSuccess = React.useCallback(function () {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n  var onSwipeBackCancel = React.useCallback(function () {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n  var swipingBackTransitionEndHandler = React.useCallback(function (e) {\n    var _e, _e1; // indexOf because of vendor prefixes in old browsers\n\n\n    if (!e || ((_e = e) === null || _e === void 0 ? void 0 : _e.propertyName.includes(\"transform\")) && ((_e1 = e) === null || _e1 === void 0 ? void 0 : _e1.target) === pickPanel(swipeBackNextPanel)) {\n      switch (swipeBackResult) {\n        case SwipeBackResults.fail:\n          onSwipeBackCancel();\n          break;\n\n        case SwipeBackResults.success:\n          onSwipeBackSuccess();\n      }\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult]);\n\n  var onMoveX = function onMoveX(event) {\n    var _configProvider;\n\n    if (platform !== Platform.IOS || swipeBackPrevented || swipeBackExcluded(event) || disableAnimation) {\n      return;\n    }\n\n    if (!((_configProvider = configProvider) === null || _configProvider === void 0 ? void 0 : _configProvider.isWebView)) {\n      if ((event.startX <= SWIPE_BACK_AREA || event.startX >= window.innerWidth - SWIPE_BACK_AREA) && !browserSwipe) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || animated && event.startX <= SWIPE_BACK_AREA) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        var payload = onSwipeBackStart(activePanel);\n\n        if (payload === \"prevent\") {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        var _scroll; // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n\n\n        blurActiveElement(document);\n        scrolls.current[activePanel] = (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      var swipeBackShift = 0;\n\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window.innerWidth - swipeBackStartX) {\n        swipeBackShift = window.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  var onEnd = React.useCallback(function (event) {\n    if (swipingBack) {\n      var speed = swipeBackShift / event.duration * 1000;\n\n      var _window_innerWidth;\n\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= ((_window_innerWidth = window.innerWidth) !== null && _window_innerWidth !== void 0 ? _window_innerWidth : 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackStartX + swipeBackShift > window.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n\n    if (swipeBackPrevented) {\n      setSwipeBackPrevented(false);\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackShift, swipeBackStartX, swipingBack, swipeBackPrevented, window]);\n\n  var calcPanelSwipeStyles = function calcPanelSwipeStyles(panelId) {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    var isPrev = panelId === swipeBackPrevPanel;\n    var isNext = panelId === swipeBackNextPanel;\n\n    if (!isPrev && !isNext || swipeBackResult) {\n      return {};\n    }\n\n    var prevPanelTranslate = \"\".concat(swipeBackShift, \"px\");\n    var nextPanelTranslate = \"\".concat(-50 + swipeBackShift * 100 / window.innerWidth / 2, \"%\");\n    var prevPanelShadow = 0.3 * (window.innerWidth - swipeBackShift) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? {\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n      };\n    }\n\n    if (isPrev) {\n      return {\n        transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(function () {\n    // Нужен переход\n    if (prevActivePanel && prevActivePanel !== activePanelProp && !prevSwipingBack && !prevBrowserSwipe) {\n      var _scroll;\n\n      var firstLayerId = React.Children.toArray(children).map(function (panel) {\n        return getNavId(panel.props, warn);\n      }).find(function (id) {\n        return id === prevActivePanel || id === activePanelProp;\n      });\n      var isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition); // Фолбек анимации перехода\n\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    } // Закончилась анимация свайпа назад\n\n\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      var nextPanel = activePanelProp;\n      var prevPanel = prevActivePanel;\n\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = function () {\n        if (nextPanel !== null) {\n          var _scroll;\n\n          (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.scrollTo(0, scrolls.current[nextPanel]);\n        }\n\n        prevOnTransition && prevOnTransition({\n          isBack: true,\n          from: prevPanel,\n          to: nextPanel\n        });\n      };\n    } // Началась анимация завершения свайпа назад.\n\n\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(pickPanel(swipeBackNextPanel), swipingBackTransitionEndHandler, platform === Platform.IOS ? 600 : 300);\n    } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      var _scroll1;\n\n      (_scroll1 = scroll) === null || _scroll1 === void 0 ? void 0 : _scroll1.scrollTo(0, scrolls.current[activePanel]);\n    } // Закончился Safari свайп\n\n\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [activePanelProp, activePanel, animationFinishTimeout, browserSwipe, children, disableAnimation, document, flushTransition, onSwipeBackStart, panels, platform, prevActivePanel, prevBrowserSwipe, prevOnTransition, prevSwipeBackPrevPanel, prevSwipeBackResult, prevSwipingBack, scroll, swipeBackNextPanel, swipeBackResult, swipingBack, swipingBackTransitionEndHandler, waitTransitionFinish]);\n  return /*#__PURE__*/React.createElement(Touch, _object_spread_props(_object_spread({\n    Component: \"section\"\n  }, restProps), {\n    className: classNames(\"vkuiView\", platform === Platform.IOS && classNames(\"vkuiView--ios\", \"vkuiInternalView--ios\"), !disableAnimation && animated && \"vkuiView--animated\", !disableAnimation && swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n    onMoveX: onMoveX,\n    onEnd: onEnd\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiView__panels\"\n  }, panels.map(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n    var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n    var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n\n    var _scrolls_current_panelId;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === SwipeBackResults.success && \"vkuiView__panel--swipe-back-success\", swipeBackResult === SwipeBackResults.fail && \"vkuiView__panel--swipe-back-failed\"),\n      onAnimationEnd: isTransitionTarget ? transitionEndHandler : undefined,\n      ref: function ref(el) {\n        return panelId !== undefined && (panelNodes.current[panelId] = el);\n      },\n      style: calcPanelSwipeStyles(panelId),\n      key: panelId\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiView__panel-in\",\n      style: {\n        marginTop: compensateScroll ? -((_scrolls_current_panelId = scrolls.current[panelId]) !== null && _scrolls_current_panelId !== void 0 ? _scrolls_current_panelId : 0) : undefined\n      }\n    }, /*#__PURE__*/React.createElement(NavTransitionDirectionProvider, {\n      isBack: swipingBack || isBack\n    }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n      entering: panelId === nextPanel || panelId === swipeBackNextPanel\n    }, panel))));\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","Platform","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavTransitionProvider","NavTransitionDirectionProvider","useSplitCol","Touch","swipeBackExcluded","SWIPE_BACK_AREA","SwipeBackResults","fail","success","scrollsCache","warn","View","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","configProvider","splitCol","scrolls","useRef","id","afterTransition","useEffect","current","panelNodes","window","document","scroll","platform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipingBack","setSwipingBack","swipeBackPrevented","setSwipeBackPrevented","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","Boolean","waitTransitionFinish","animationFinishTimeout","IOS","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","onMoveX","event","isWebView","startX","innerWidth","length","payload","getScroll","y","slice","shiftX","onEnd","speed","duration","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","concat","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","firstLayerId","map","find","supported","set","Component","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","entering"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\components\\View\\View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\n\nconst SWIPE_BACK_AREA = 70;\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const scrolls = React.useRef(scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackPrevented, setSwipeBackPrevented] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false ||\n    !splitCol?.animate ||\n    platform === Platform.VKCOM;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const onMoveX = (event: TouchEvent): void => {\n    if (\n      platform !== Platform.IOS ||\n      swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      disableAnimation\n    ) {\n      return;\n    }\n\n    if (!configProvider?.isWebView) {\n      if (\n        (event.startX <= SWIPE_BACK_AREA || event.startX >= window!.innerWidth - SWIPE_BACK_AREA) &&\n        !browserSwipe\n      ) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || (animated && event.startX <= SWIPE_BACK_AREA)) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      let swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        swipeBackShift = window!.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (event: TouchEvent): void => {\n      if (swipingBack) {\n        const speed = (swipeBackShift / event.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (speed > 250 || swipeBackStartX + swipeBackShift > window!.innerWidth / 2) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n      if (swipeBackPrevented) {\n        setSwipeBackPrevented(false);\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      swipeBackPrevented,\n      window,\n    ],\n  );\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n    let prevPanelShadow = (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      className={classNames(\n        styles['View'],\n        platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n        !disableAnimation && animated && styles['View--animated'],\n        !disableAnimation && swipingBack && styles['View--swiping-back'],\n        disableAnimation && styles['View--no-motion'],\n        className,\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div className={styles['View__panels']}>\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              className={classNames(\n                styles['View__panel'],\n                panelId === activePanel && styles['View__panel--active'],\n                panelId === prevPanel && styles['View__panel--prev'],\n                panelId === nextPanel && styles['View__panel--next'],\n                panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                swipeBackResult === SwipeBackResults.success &&\n                  styles['View__panel--swipe-back-success'],\n                swipeBackResult === SwipeBackResults.fail &&\n                  styles['View__panel--swipe-back-failed'],\n              )}\n              onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n              ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                className={styles['View__panel-in']}\n                style={{\n                  marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                }}\n              >\n                <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                  <NavTransitionProvider\n                    entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </NavTransitionDirectionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Touch>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}