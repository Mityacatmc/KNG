{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n \n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\n\nexport function AspectRatio(_param) {\n  var ratio = _param.ratio,\n      children = _param.children,\n      _param_mode = _param.mode,\n      mode = _param_mode === void 0 ? \"stretch\" : _param_mode,\n      styleProp = _param.style,\n      props = _object_without_properties(_param, [\"ratio\", \"children\", \"mode\", \"style\"]);\n\n  var style = _define_property({}, \"--vkui_internal--aspect_ratio\", String(ratio));\n\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    baseClassName: classNames(\"vkuiAspectRatio\", mode === \"stretch\" && \"vkuiAspectRatio--mode-stretch\"),\n    style: _object_spread({}, styleProp, style)\n  }, props));\n}","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASC,aAAT,QAA8B,gCAA9B;AAgBA;;;;;;;;AAOA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAAqB;MAC1BC,QAD0BD,OAC1BC;MACAC,WAF0BF,OAE1BE;MAAAA,cAF0BF,OAG1BG;MAAAA,gCAAO,SAAPA,GAAOC;MACPC,SAAOC,GAJmBN,OAI1BK;MACGE,mCALuBP,MAKvBO,EALuB,CAC1BN,OAD0B,EAE1BC,UAF0B,EAG1BC,MAH0B,EAI1BE,OAJ0B,CAKvBE;;EAEH,IAAMF,QACJG,qBAAC,+BAAD,EAAmCC,OAAOR,KAAPQ,CAAnC,CADF;;EAIA,oBACEb,oBAACE,aAAD,EAACA;IACCY,eAAeb,8BAEbM,SAAS,SAATA,IAAS,+BAFIN,CADhBC;IAKCO,OAAOM,mBAAKL,SAAL,EAAmBD,KAAnB;EALRP,GAMKS,KANLT,CAAD,CADF;AAUF","names":["React","classNames","RootComponent","AspectRatio","_param","ratio","children","mode","_param_mode","style","styleProp","props","_define_property","String","baseClassName","_object_spread"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\components\\AspectRatio\\AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './AspectRatio.module.css';\n\nexport interface AspectRatioProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  className?: string;\n  /**\n   * По умолчанию, вложенный контент будет растягиваться и заполнять весь блок.\n   */\n  mode?: 'stretch' | 'none';\n  children: React.ReactNode;\n  /**\n   * Например 16 / 9, 4 / 3, 1920 / 1080\n   */\n  ratio: number;\n}\n\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n \n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio({\n  ratio,\n  children,\n  mode = 'stretch',\n  style: styleProp,\n  ...props\n}: AspectRatioProps): JSX.Element {\n  const style: React.CSSProperties & CSSCustomProperties = {\n    ['--vkui_internal--aspect_ratio']: String(ratio),\n  };\n\n  return (\n    <RootComponent\n      baseClassName={classNames(\n        styles.AspectRatio,\n        mode === 'stretch' && styles['AspectRatio--mode-stretch'],\n      )}\n      style={{ ...styleProp, ...style }}\n      {...props}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}