{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { arrowMiddleware, autoPlacementMiddleware, autoUpdateFloatingElement, checkIsNotAutoPlacement, convertFloatingDataToReactCSSProperties, flipMiddleware, getAutoPlacementAlign, hideMiddleware, offsetMiddleware, shiftMiddleware, sizeMiddleware, useFloating } from \"../../lib/floating\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { DEFAULT_ARROW_HEIGHT, DEFAULT_ARROW_PADDING, DefaultIcon } from \"../PopperArrow/DefaultIcon\";\nimport { PopperArrow } from \"../PopperArrow/PopperArrow\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Popper\n */\n\nexport var Popper = function Popper(_param) {\n  var targetRef = _param.targetRef,\n      children = _param.children,\n      getRef = _param.getRef,\n      tmp = _param.placement,\n      placementProp = tmp === void 0 ? \"bottom-start\" : tmp,\n      onPlacementChange = _param.onPlacementChange,\n      arrow = _param.arrow,\n      _param_arrowHeight = _param.arrowHeight,\n      arrowHeight = _param_arrowHeight === void 0 ? DEFAULT_ARROW_HEIGHT : _param_arrowHeight,\n      _param_arrowPadding = _param.arrowPadding,\n      arrowPadding = _param_arrowPadding === void 0 ? DEFAULT_ARROW_PADDING : _param_arrowPadding,\n      arrowClassName = _param.arrowClassName,\n      _param_ArrowIcon = _param.ArrowIcon,\n      ArrowIcon = _param_ArrowIcon === void 0 ? DefaultIcon : _param_ArrowIcon,\n      sameWidth = _param.sameWidth,\n      _param_offsetDistance = _param.offsetDistance,\n      offsetDistance = _param_offsetDistance === void 0 ? 8 : _param_offsetDistance,\n      _param_offsetSkidding = _param.offsetSkidding,\n      offsetSkidding = _param_offsetSkidding === void 0 ? 0 : _param_offsetSkidding,\n      _param_forcePortal = _param.forcePortal,\n      forcePortal = _param_forcePortal === void 0 ? true : _param_forcePortal,\n      portalRoot = _param.portalRoot,\n      _param_autoUpdateOnTargetResize = _param.autoUpdateOnTargetResize,\n      autoUpdateOnTargetResize = _param_autoUpdateOnTargetResize === void 0 ? false : _param_autoUpdateOnTargetResize,\n      styleProp = _param.style,\n      customMiddlewares = _param.customMiddlewares,\n      renderContent = _param.renderContent,\n      getRootRef = _param.getRootRef,\n      hideWhenReferenceHidden = _param.hideWhenReferenceHidden,\n      restProps = _object_without_properties(_param, [\"targetRef\", \"children\", \"getRef\", \"placement\", \"onPlacementChange\", \"arrow\", \"arrowHeight\", \"arrowPadding\", \"arrowClassName\", \"ArrowIcon\", \"sameWidth\", \"offsetDistance\", \"offsetSkidding\", \"forcePortal\", \"portalRoot\", \"autoUpdateOnTargetResize\", \"style\", \"customMiddlewares\", \"renderContent\", \"getRootRef\", \"hideWhenReferenceHidden\"]);\n\n  var _hide;\n\n  var _React_useState = _sliced_to_array(React.useState(null), 2),\n      arrowRef = _React_useState[0],\n      setArrowRef = _React_useState[1];\n\n  var isNotAutoPlacement = checkIsNotAutoPlacement(placementProp);\n  var memoizedMiddlewares = React.useMemo(function () {\n    var middlewares = [offsetMiddleware({\n      crossAxis: offsetSkidding,\n      mainAxis: arrow ? offsetDistance + arrowHeight : offsetDistance\n    })]; // см. https://floating-ui.com/docs/flip#conflict-with-autoplacement\n\n    if (isNotAutoPlacement) {\n      middlewares.push(flipMiddleware());\n    } else {\n      middlewares.push(autoPlacementMiddleware({\n        alignment: getAutoPlacementAlign(placementProp)\n      }));\n    }\n\n    middlewares.push(shiftMiddleware());\n\n    if (sameWidth) {\n      middlewares.push(sizeMiddleware({\n        apply: function apply(param) {\n          var rects = param.rects,\n              elements = param.elements;\n          Object.assign(elements.floating.style, {\n            width: \"\".concat(rects.reference.width, \"px\")\n          });\n        }\n      }));\n    }\n\n    if (customMiddlewares) {\n      var _middlewares;\n\n      (_middlewares = middlewares).push.apply(_middlewares, _to_consumable_array(customMiddlewares));\n    } // см. https://floating-ui.com/docs/arrow#order\n\n\n    if (arrow) {\n      middlewares.push(arrowMiddleware({\n        element: arrowRef,\n        padding: arrowPadding\n      }));\n    }\n\n    if (hideWhenReferenceHidden) {\n      middlewares.push(hideMiddleware());\n    }\n\n    return middlewares;\n  }, [offsetSkidding, arrowRef, arrow, arrowHeight, arrowPadding, offsetDistance, isNotAutoPlacement, sameWidth, customMiddlewares, placementProp, hideWhenReferenceHidden]);\n\n  var _useFloating = useFloating({\n    placement: isNotAutoPlacement ? placementProp : undefined,\n    middleware: memoizedMiddlewares,\n    whileElementsMounted: function whileElementsMounted() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return autoUpdateFloatingElement.apply(void 0, _to_consumable_array(args).concat([{\n        elementResize: autoUpdateOnTargetResize\n      }]));\n    }\n  }),\n      floatingDataX = _useFloating.x,\n      floatingDataY = _useFloating.y,\n      floatingPositionStrategy = _useFloating.strategy,\n      resolvedPlacement = _useFloating.placement,\n      refs = _useFloating.refs,\n      _useFloating_middlewareData = _useFloating.middlewareData,\n      arrowCoords = _useFloating_middlewareData.arrow,\n      hide = _useFloating_middlewareData.hide; // TODO [>=6]: убрать getRef\n\n\n  var handleRootRef = useExternRef(refs.setFloating, getRef, getRootRef);\n  React.useEffect(function () {\n    refs.setReference(targetRef.current);\n  }, [refs, targetRef]);\n  React.useEffect(function () {\n    if (resolvedPlacement && onPlacementChange) {\n      onPlacementChange({\n        placement: resolvedPlacement\n      });\n    }\n  }, [onPlacementChange, resolvedPlacement]);\n  var dropdown = /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: \"vkuiPopper\",\n    getRootRef: handleRootRef,\n    style: _object_spread({}, styleProp, convertFloatingDataToReactCSSProperties(floatingPositionStrategy, floatingDataX, floatingDataY, sameWidth ? null : undefined), ((_hide = hide) === null || _hide === void 0 ? void 0 : _hide.referenceHidden) && {\n      visibility: \"hidden\"\n    })\n  }), arrow && /*#__PURE__*/React.createElement(PopperArrow, {\n    coords: arrowCoords,\n    placement: resolvedPlacement,\n    arrowClassName: arrowClassName,\n    getRootRef: setArrowRef,\n    Icon: ArrowIcon\n  }), renderContent ? renderContent({\n    className: \"\"\n  }) : children);\n  return /*#__PURE__*/React.createElement(AppRootPortal, {\n    forcePortal: forcePortal,\n    portalRoot: portalRoot\n  }, dropdown);\n};","map":{"version":3,"mappings":"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","names":["React","useExternRef","arrowMiddleware","autoPlacementMiddleware","autoUpdateFloatingElement","checkIsNotAutoPlacement","convertFloatingDataToReactCSSProperties","flipMiddleware","getAutoPlacementAlign","hideMiddleware","offsetMiddleware","shiftMiddleware","sizeMiddleware","useFloating","AppRootPortal","DEFAULT_ARROW_HEIGHT","DEFAULT_ARROW_PADDING","DefaultIcon","PopperArrow","RootComponent","Popper","targetRef","children","getRef","placementProp","placement","onPlacementChange","arrow","arrowHeight","arrowPadding","arrowClassName","ArrowIcon","sameWidth","offsetDistance","_param_offsetDistance","_param_offsetSkidding","offsetSkidding","_param_forcePortal","forcePortal","portalRoot","autoUpdateOnTargetResize","_param_autoUpdateOnTargetResize","style","styleProp","customMiddlewares","renderContent","getRootRef","hideWhenReferenceHidden","restProps","hide","useState","arrowRef","setArrowRef","isNotAutoPlacement","memoizedMiddlewares","useMemo","middlewares","crossAxis","mainAxis","push","alignment","apply","param","rects","elements","Object","assign","floating","width","concat","reference","_to_consumable_array","element","padding","undefined","middleware","whileElementsMounted","args","_key","arguments","elementResize","x","floatingDataX","y","floatingDataY","strategy","floatingPositionStrategy","resolvedPlacement","refs","middlewareData","arrowCoords","handleRootRef","setFloating","useEffect","setReference","current","dropdown","baseClassName","_object_spread","referenceHidden","visibility","coords","Icon","className"],"sources":["C:\\Users\\Я\\Desktop\\myproject\\vk-miniapps\\Koto-app\\node_modules\\@vkontakte\\vkui\\src\\components\\Popper\\Popper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport {\n  arrowMiddleware,\n  autoPlacementMiddleware,\n  autoUpdateFloatingElement,\n  checkIsNotAutoPlacement,\n  convertFloatingDataToReactCSSProperties,\n  flipMiddleware,\n  getAutoPlacementAlign,\n  hideMiddleware,\n  offsetMiddleware,\n  type Placement,\n  type PlacementWithAuto,\n  shiftMiddleware,\n  sizeMiddleware,\n  useFloating,\n  type UseFloatingMiddleware,\n} from '../../lib/floating';\nimport type { HasRef, HTMLAttributesWithRootRef } from '../../types';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport {\n  DEFAULT_ARROW_HEIGHT,\n  DEFAULT_ARROW_PADDING,\n  DefaultIcon,\n} from '../PopperArrow/DefaultIcon';\nimport { PopperArrow, type PopperArrowProps } from '../PopperArrow/PopperArrow';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Popper.module.css';\n\nexport interface PopperRenderContentProps {\n  className: string;\n}\n\nexport interface PopperCommonProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  /**\n   * По умолчанию компонент выберет наилучшее расположение сам. Но его можно задать извне с помощью этого свойства\n   */\n  placement?: PlacementWithAuto;\n  /**\n   * Отступ по вспомогательной оси\n   */\n  offsetSkidding?: number;\n  /**\n   * Отступ по главной оси\n   */\n  offsetDistance?: number;\n  /**\n   * Отображать ли стрелку, указывающую на якорный элемент\n   */\n  arrow?: boolean;\n  /**\n   * Высота стрелки. Складывается с `offsetDistance`, чтобы стрелка не залезала на якорный элемент.\n   */\n  arrowHeight?: number;\n  /**\n   * Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.\n   */\n  arrowPadding?: number;\n  /**\n   * Стиль стрелки.\n   */\n  arrowClassName?: string;\n  /**\n   * Пользовательская SVG иконка.\n   *\n   * Требования:\n   *\n   * 1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n   * 2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   *    растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   *    (см. https://github.com/VKCOM/VKUI/pull/4496).\n   * 3. Передайте высоту иконки в параметр `arrowHeight`. В значении высоты можно исключить хак с `1px` из п.2.\n   * 4. Убедитесь, что компонент принимает все валидные для SVG параметры.\n   * 5. Убедитесь, что SVG и её элементы наследует цвет через `fill=\"currentColor\"`.\n   */\n  ArrowIcon?: PopperArrowProps['Icon'];\n  /**\n   * Выставлять ширину равной target элементу\n   */\n  sameWidth?: boolean;\n  forcePortal?: boolean;\n  /**\n   * Кастомный root-элемент портала.\n   * При передаче вместе с `forcePorta=true` игнорируется `portalRoot` и `disablePortal`\n   * из контекста `AppRoot`.\n   */\n  portalRoot?: HTMLElement | React.RefObject<HTMLElement> | null;\n  /**\n   * Подписывается на изменение геометрии `targetRef`, чтобы пересчитать свою позицию.\n   */\n  autoUpdateOnTargetResize?: boolean;\n  /**\n   * Массив кастомных модификаторов для Popper (необходимо мемоизировать)\n   */\n  customMiddlewares?: UseFloatingMiddleware[];\n  /**\n   * При передаче содержимого в `children`, он будет обёрнут во внутренний контейнер.\n   *\n   * Если хочется управлять этим контейнером, то используйте данную функцию.\n   *\n   * > ⚠️ Параметр `children` будет проигнорирован.\n   */\n  renderContent?(props: PopperRenderContentProps): React.ReactNode;\n  onPlacementChange?(data: { placement?: Placement }): void;\n  /**\n   * Принудительно скрывает компонет если целевой элемент исчез\n   */\n  hideWhenReferenceHidden?: boolean;\n}\n\nexport interface PopperProps extends PopperCommonProps {\n  targetRef: React.RefObject<HTMLElement>;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Popper\n */\nexport const Popper = ({\n  targetRef,\n  children,\n  getRef,\n  placement: placementProp = 'bottom-start',\n  onPlacementChange,\n  arrow,\n  arrowHeight = DEFAULT_ARROW_HEIGHT,\n  arrowPadding = DEFAULT_ARROW_PADDING,\n  arrowClassName,\n  ArrowIcon = DefaultIcon,\n  sameWidth,\n  offsetDistance = 8,\n  offsetSkidding = 0,\n  forcePortal = true,\n  portalRoot,\n  autoUpdateOnTargetResize = false,\n  style: styleProp,\n  customMiddlewares,\n  renderContent,\n  getRootRef,\n  hideWhenReferenceHidden,\n  ...restProps\n}: PopperProps) => {\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n\n  const isNotAutoPlacement = checkIsNotAutoPlacement(placementProp);\n\n  const memoizedMiddlewares = React.useMemo(() => {\n    const middlewares: UseFloatingMiddleware[] = [\n      offsetMiddleware({\n        crossAxis: offsetSkidding,\n        mainAxis: arrow ? offsetDistance + arrowHeight : offsetDistance,\n      }),\n    ];\n\n    // см. https://floating-ui.com/docs/flip#conflict-with-autoplacement\n    if (isNotAutoPlacement) {\n      middlewares.push(flipMiddleware());\n    } else {\n      middlewares.push(\n        autoPlacementMiddleware({ alignment: getAutoPlacementAlign(placementProp) }),\n      );\n    }\n\n    middlewares.push(shiftMiddleware());\n\n    if (sameWidth) {\n      middlewares.push(\n        sizeMiddleware({\n          apply({ rects, elements }) {\n            Object.assign(elements.floating.style, {\n              width: `${rects.reference.width}px`,\n            });\n          },\n        }),\n      );\n    }\n\n    if (customMiddlewares) {\n      middlewares.push(...customMiddlewares);\n    }\n\n    // см. https://floating-ui.com/docs/arrow#order\n    if (arrow) {\n      middlewares.push(\n        arrowMiddleware({\n          element: arrowRef,\n          padding: arrowPadding,\n        }),\n      );\n    }\n\n    if (hideWhenReferenceHidden) {\n      middlewares.push(hideMiddleware());\n    }\n\n    return middlewares;\n  }, [\n    offsetSkidding,\n    arrowRef,\n    arrow,\n    arrowHeight,\n    arrowPadding,\n    offsetDistance,\n    isNotAutoPlacement,\n    sameWidth,\n    customMiddlewares,\n    placementProp,\n    hideWhenReferenceHidden,\n  ]);\n\n  const {\n    x: floatingDataX,\n    y: floatingDataY,\n    strategy: floatingPositionStrategy,\n    placement: resolvedPlacement,\n    refs,\n    middlewareData: { arrow: arrowCoords, hide },\n  } = useFloating({\n    placement: isNotAutoPlacement ? placementProp : undefined,\n    middleware: memoizedMiddlewares,\n    whileElementsMounted(...args) {\n      return autoUpdateFloatingElement(...args, {\n        elementResize: autoUpdateOnTargetResize,\n      });\n    },\n  });\n\n  // TODO [>=6]: убрать getRef\n  const handleRootRef = useExternRef<HTMLDivElement>(refs.setFloating, getRef, getRootRef);\n\n  React.useEffect(() => {\n    refs.setReference(targetRef.current);\n  }, [refs, targetRef]);\n\n  React.useEffect(() => {\n    if (resolvedPlacement && onPlacementChange) {\n      onPlacementChange({ placement: resolvedPlacement });\n    }\n  }, [onPlacementChange, resolvedPlacement]);\n\n  const dropdown = (\n    <RootComponent\n      {...restProps}\n      baseClassName={styles['Popper']}\n      getRootRef={handleRootRef}\n      style={{\n        ...styleProp,\n        ...convertFloatingDataToReactCSSProperties(\n          floatingPositionStrategy,\n          floatingDataX,\n          floatingDataY,\n          sameWidth ? null : undefined,\n        ),\n        ...(hide?.referenceHidden && {\n          visibility: 'hidden',\n        }),\n      }}\n    >\n      {arrow && (\n        <PopperArrow\n          coords={arrowCoords}\n          placement={resolvedPlacement}\n          arrowClassName={arrowClassName}\n          getRootRef={setArrowRef}\n          Icon={ArrowIcon}\n        />\n      )}\n      {renderContent ? renderContent({ className: '' }) : children}\n    </RootComponent>\n  );\n\n  return (\n    <AppRootPortal forcePortal={forcePortal} portalRoot={portalRoot}>\n      {dropdown}\n    </AppRootPortal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}